// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {

    IN  in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[9..11],
              a=load0, b=load1, c=load2, d=load3, e=load4,
              f=load5, g=load6, h=load7);

    RAM512 (in=in, load=load0, address=address[0..8], out=ram0);
    RAM512 (in=in, load=load1, address=address[0..8], out=ram1);
    RAM512 (in=in, load=load2, address=address[0..8], out=ram2);
    RAM512 (in=in, load=load3, address=address[0..8], out=ram3);
    RAM512 (in=in, load=load4, address=address[0..8], out=ram4);
    RAM512 (in=in, load=load5, address=address[0..8], out=ram5);
    RAM512 (in=in, load=load6, address=address[0..8], out=ram6);
    RAM512 (in=in, load=load7, address=address[0..8], out=ram7);

    Mux8Way16 (sel=address[9..11], a=ram0, b=ram1, c=ram2,
               d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, out=out);
}
